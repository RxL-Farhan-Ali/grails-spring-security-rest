buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.adarshr:gradle-test-logger-plugin:2.0.0'
    }
}

plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

allprojects {
    apply plugin:"idea"
}

def pluginProjects = ['spring-security-rest', 'spring-security-rest-memcached', 'spring-security-rest-redis', 'spring-security-rest-grailscache', 'spring-security-rest-gorm']
def profileProjects = ['spring-security-rest-testapp-profile']
def publishedProjects = pluginProjects + profileProjects

subprojects { Project project ->
    group "org.grails.plugins"
    version "3.0.1"

    ext {
        grailsVersion = project.grailsVersion
        isSnapshot = version.endsWith('SNAPSHOT')
    }

    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    if (project.name != "spring-security-rest-docs" &&
        project.name != "spring-security-rest-testapp-profile" &&
            !project.name.startsWith("build") ) {
        apply plugin: "org.grails.grails-plugin"
    }

    if (project.name in pluginProjects) {

        sourceCompatibility = targetCompatibility = 1.8

        dependencies {
            console "org.grails:grails-console"

            implementation "org.springframework.boot:spring-boot-starter-logging"
            implementation "org.springframework.boot:spring-boot-autoconfigure"
            implementation "org.grails:grails-core"

            compileOnly "org.grails:grails-plugin-services"
            compileOnly "org.grails:grails-plugin-domain-class"

            testImplementation "org.grails:grails-gorm-testing-support"
            testImplementation "org.grails:grails-web-testing-support"
            testCompile('com.athaydes:spock-reports:1.7.1') {
                transitive = false
            }
        }

        apply plugin: 'com.adarshr.test-logger'

        testlogger {
            showFullStackTraces true
            showStandardStreams true
            showPassedStandardStreams false
            showSkippedStandardStreams false
            showFailedStandardStreams true
        }
    }

    if (project.name in profileProjects) {
        apply plugin: "org.grails.grails-profile"
    }

    if (project.name in publishedProjects && project.name != "spring-security-rest-docs" &&
            project.name != "spring-security-rest-testapp-profile") {
        apply plugin: 'maven-publish'
        apply plugin: 'signing'
        publishing {
            publications {
                mavenRelease(MavenPublication) {

                    groupId = project.group
                    artifactId = 'spring-security-rest'
                    version = project.version

                    from components.java

                    artifact sourcesJar
                    artifact javadocJar

                    pom {
                        name = 'Spring Security REST plugin'
                        description = 'Grails plugin to implement token-based, RESTful authentication using Spring Security'
                        url = 'https://github.com/grails/grails-spring-security-rest'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'alvarosanchez'
                                name = 'Alvaro Sanchez-Mariscal'
                                email = ''
                            }
                            developer {
                                id = 'jameskleeh'
                                name = 'James Kleeh'
                                email = ''
                            }
                        }
                        scm {
                            connection = 'scm:git:https://github.com/grails/grails-spring-security-rest.git'
                            developerConnection = 'scm:git:https://github.com/grails/grails-spring-security-rest.git'
                            url = 'https://github.com/grails/grails-spring-security-rest/tree/3.0.x'
                        }
                    }
                }
            }
        }
    }
}

task aggregateGroovyDoc(type: Groovydoc) {
    def groovyDocProjects = subprojects.findAll { it.name in pluginProjects }
    group = JavaBasePlugin.DOCUMENTATION_GROUP

    dependsOn groovyDocProjects.groovydoc
    source groovyDocProjects.groovydoc.source
    destinationDir file("${buildDir}/docs/groovydoc")
    classpath = files(groovyDocProjects.groovydoc.classpath)
    groovyClasspath = files(groovyDocProjects.groovydoc.groovyClasspath)
}